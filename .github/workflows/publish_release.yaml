name: Build and Publish Package
on:
  workflow_call:
    inputs:
      python-version-file:
        required: true
        type: string
   
permissions:
  contents: write
  
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Download package artifact
        uses: actions/download-artifact@v4.2.1
        with:
            name: python-package
            path: dist/

      - name: Verify package files
        run: |
          if [ -z "$(ls -A dist/)" ]; then
              echo "❌ No package files found in the artifact"
              exit 1
          fi
          echo "✅ Found the following package files:"
          ls -la dist/

      - name: Extract version
        id: get_version
        run: |
          VERSION=$(grep -m 1 'version = '  ${{ inputs.python-version-file }} | sed -e 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="v${{ steps.get_version.outputs.version }}"
          echo "Checking if release tag exists: $TAG"

          if gh release view "$TAG" --repo="$GITHUB_REPOSITORY" &>/dev/null; then
            echo "::error::Release $TAG already exists. Please increment the version number."
            exit 1
          fi
          echo "Release does not exist. Will create new release."
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: "TAG=\"v${{ steps.get_version.outputs.version }}\"\necho \"Creating release tag: $TAG\"\n\ngh release create \"$TAG\" --repo=\"$GITHUB_REPOSITORY\" \\\n  --title=\"${GITHUB_REPOSITORY#*/} ${{ steps.get_version.outputs.version }}\" \\\n  --generate-notes\n  \n"